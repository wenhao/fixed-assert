apply plugin: 'java'
apply plugin: 'spring-boot'
apply plugin: 'checkstyle'
apply plugin: 'cobertura'
apply plugin: 'docker'

repositories {
    mavenLocal()
    mavenCentral()
}

dependencies {
    compile("org.springframework.boot:spring-boot-starter-actuator:$springBootVersion")
    compile("org.springframework.boot:spring-boot-starter-web:$springBootVersion")
    compile("org.springframework.boot:spring-boot-starter-data-jpa:$springBootVersion")
    compile("com.google.guava:guava:$guavaVersion")
    compile("com.google.code.gson:gson:$gsonVersion")
    runtime("com.h2database:h2:$h2Version")
    testCompile("org.springframework.boot:spring-boot-starter-test:$springBootVersion")
    testCompile("org.assertj:assertj-core:$assertJVersion")
    testCompile("com.jayway.jsonpath:json-path-assert:$jsonPathVersion")
}

task buildDocker(type: Docker, dependsOn: build) {
    push = true
    applicationName = jar.baseName
    dockerfile = file('src/main/docker/Dockerfile')
    doFirst {
        copy {
            from jar
            into stageDir
        }
    }
}

checkstyle {
    configFile = file('config/quality/checkstyle/checkstyle.xml')
    configProperties.checkstyleSuppressionsPath = file("config/quality/checkstyle/suppressions.xml")
}

checkstyleTest.exclude '**/*.*'


cobertura {
    coverageFormats = ['html']
    coverageEncoding = 'UTF-8'
    coverageExcludes = []
    coverageIgnoreMethodAnnotations = []
    coverageCheckBranchRate = 80
    coverageCheckLineRate = 80
    coverageCheckPackageBranchRate = 80
    coverageCheckPackageLineRate = 80
    coverageCheckTotalBranchRate = 80
    coverageCheckTotalLineRate = 80
    coverageIgnoreTrivial = true
    //TODO temp disable test coverage
    coverageCheckHaltOnFailure = false
}
